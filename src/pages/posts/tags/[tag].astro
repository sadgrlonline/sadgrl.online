---
import BaseLayout from "../../../layouts/BaseLayout.astro";
import BlogPost from "../../../components/BlogPost.astro";

// Generate static paths per tag
export async function getStaticPaths() {
  const allPosts = Object.values(
    import.meta.glob("../*.md", { eager: true }),
  ) as {
    frontmatter: { tags?: string[]; title: string };
    url: string;
  }[];

  const tags = new Set<string>();
  for (const post of allPosts) {
    post.frontmatter.tags?.forEach((tag) => tags.add(tag));
  }

  return Array.from(tags).map((tag) => ({
    params: { tag: encodeURIComponent(tag) },
    props: { posts: allPosts },
  }));
}

// Props + params
const { tag } = Astro.params;
const decodedTag = decodeURIComponent(tag);
const { posts } = Astro.props;

// Filter posts
const filteredPosts = posts.filter((post) =>
  post.frontmatter.tags?.includes(decodedTag),
);

const pageTitle = `Guides tagged with ${decodedTag}`;
---

<BaseLayout pageTitle={pageTitle}>
  <p aria-label={pageTitle}>
    <h1>{pageTitle}</h1>
  </p>

  {
    filteredPosts.length === 0 ? (
      <p>No posts found for this tag.</p>
    ) : (
      <ul>
        {filteredPosts.map((post) => (
          <BlogPost url={post.url} title={post.frontmatter.title} />
        ))}
      </ul>
    )
  }
</BaseLayout>
